/*
 * File: app/controller/Recipes.js
 *
 * This file was generated by Sencha Architect version 2.2.2.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 4.2.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 4.2.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('BeerBuilder.controller.Recipes', {
    extend: 'Ext.app.Controller',

    models: [
        'Recipe',
        'RecipeIngredient',
        'Unit',
        'Ingredient'
    ],
    stores: [
        'Recipes',
        'RecipeIngredients',
        'Units',
        'Ingredients'
    ],
    views: [
        'recipe.Sidebar',
        'Header',
        'recipe.View',
        'ingredient.List',
        'ViewContainer',
        'UnitGridPanel',
        'IngredientGridPanel',
        'RecipeFormPanel',
        'MainTabPanel',
        'RecipesGridPanel',
        'RecipeEditPanel',
        'RecipeIngredientsGrid'
    ],

    refs: [
        {
            ref: 'recipeSideBar',
            selector: 'recipesidebar'
        },
        {
            ref: 'recipeView',
            selector: 'recipeview'
        },
        {
            ref: 'ingredientList',
            selector: 'ingredientlist'
        },
        {
            ref: 'recipeFormPanel',
            selector: 'recipeformpanel'
        },
        {
            ref: 'recipeGridPanel',
            selector: 'recipesgridpanel'
        },
        {
            ref: 'recipeIngredientsGrid',
            selector: 'recipeingredientsgrid'
        },
        {
            ref: 'addIngredientToRecipe',
            selector: '#addingredienttorecipe'
        },
        {
            ref: 'addQtyToRecipe',
            selector: '#addqtytorecipe'
        },
        {
            ref: 'addUnitToRecipe',
            selector: '#addunittorecipe'
        }
    ],

    onSaveRecipe: function(button, e, eOpts) {
        var formpanel = this.getRecipeFormPanel();
        var form = formpanel.getForm();
        var selectedRecord = form.getRecord();
        var selectedValues = form.getValues();
        selectedRecord.set(selectedValues);

        if (this.adding){
            this.adding = undefined;
            var store = Ext.getStore('Recipes');  
            store.add(selectedRecord);
        }
    },

    onSidebarSelectionChange: function(model, selected, eOpts) {
        if (selected.length){
            this.showRecipe(selected[0]);
        }
    },

    onAddRecipe: function(button, e, eOpts) {
        var store = Ext.getStore('Recipes');
        var newRecord = Ext.create('BeerBuilder.model.Recipe');
        var formpanel = this.getRecipeFormPanel();
        var form = formpanel.getForm();
        form.loadRecord(newRecord);
        this.adding = true;

    },

    onGridpanelSelect: function(rowmodel, record, index, eOpts) {
        var formpanel = this.getRecipeFormPanel();
        var form = formpanel.getForm();
        var recordId = record.get('id');

        form.loadRecord(record);
        this.adding = false;

        var selectedValues = form.getValues();
        record.set(selectedValues);

        var is = Ext.getStore('RecipeIngredients');
        is.clearFilter(true);
        is.filter('recipe_id', recordId);

        var grid = this.getRecipeIngredientsGrid();
        grid.reconfigure(is);

    },

    onAddIngredientToRecipe: function(button, e, eOpts) {
        debugger;
        var formpanel = this.getRecipeFormPanel();
        var form = formpanel.getForm();
        var record = form.getRecord();
        var recipeId = record.get('id');

        var ingredientfield = this.getAddIngredientToRecipe();
        var ingredientId = ingredientfield.getValue();

        var qtyfield = this.getAddQtyToRecipe();
        var qty = qtyfield.getValue();

        var unitfield = this.getAddUnitToRecipe();
        var unitId = unitfield.getValue();

        var store = Ext.getStore('RecipeIngredients');
        var newRecord = Ext.create('BeerBuilder.model.RecipeIngredient');
        newRecord.set('recipe_id',recipeId);
        newRecord.set('ingredient_id', ingredientId);
        newRecord.set('qty',qty);
        newRecord.set('unit_id',unitId);
        store.add(newRecord);
    },

    onRecipesStoreLoad: function(store, records) {
        Ext.defer(function() {
            if (records.length) {
                this.getRecipeSideBar().getSelectionModel().select(records[0]);
            }
        }, 1000, this);
    },

    showRecipe: function(record, id) {
        var me = this;
        var idToCheck = record.get('id');
        me.getRecipeView().bind(record);
        var is = Ext.getStore('RecipeIngredients');
        is.clearFilter(true);
        is.filter('recipe_id', idToCheck);
        me.getIngredientList().bind(record, is);
    },

    init: function(application) {
        this.getRecipesStore().on({
            scope: this,
            load : this.onRecipesStoreLoad
        });

        this.control({
            "button[action='saveRecipe']": {
                click: this.onSaveRecipe
            },
            "recipesidebar": {
                selectionchange: this.onSidebarSelectionChange
            },
            "button[action='addRecipe']": {
                click: this.onAddRecipe
            },
            "recipesgridpanel": {
                select: this.onGridpanelSelect
            },
            "button[action='addIngredientToRecipe']": {
                click: this.onAddIngredientToRecipe
            }
        });
    }

});
