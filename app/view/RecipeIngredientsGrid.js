/*
 * File: app/view/RecipeIngredientsGrid.js
 *
 * This file was generated by Sencha Architect version 2.2.2.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 4.2.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 4.2.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('BeerBuilder.view.RecipeIngredientsGrid', {
    extend: 'Ext.grid.Panel',
    alias: 'widget.recipeingredientsgrid',

    id: 'recipeingredientsedit',
    title: 'Recipe Ingredients',

    initComponent: function() {
        var me = this;

        Ext.applyIf(me, {
            dockedItems: [
                {
                    xtype: 'toolbar',
                    dock: 'top',
                    items: [
                        {
                            xtype: 'combobox',
                            id: 'addingredienttorecipe',
                            itemId: 'addingredienttorecipe',
                            fieldLabel: 'Ingredient',
                            labelAlign: 'top',
                            displayField: 'name',
                            queryMode: 'local',
                            store: 'Ingredients',
                            valueField: 'id'
                        },
                        {
                            xtype: 'tbspacer',
                            width: 10
                        },
                        {
                            xtype: 'numberfield',
                            id: 'addqtytorecipe',
                            itemId: 'addqtytorecipe',
                            fieldLabel: 'Qty',
                            labelAlign: 'top'
                        },
                        {
                            xtype: 'tbspacer',
                            width: 10
                        },
                        {
                            xtype: 'combobox',
                            id: 'addunittorecipe',
                            itemId: 'addunittorecipe',
                            fieldLabel: 'Unit',
                            labelAlign: 'top',
                            displayField: 'name',
                            queryMode: 'local',
                            store: 'Units',
                            valueField: 'id'
                        },
                        {
                            xtype: 'tbspacer',
                            width: 10
                        },
                        {
                            xtype: 'button',
                            action: 'addIngredientToRecipe',
                            width: 100,
                            iconCls: 'add',
                            text: 'Add'
                        }
                    ]
                }
            ],
            columns: [
                {
                    xtype: 'gridcolumn',
                    renderer: function(value, metaData, record, rowIndex, colIndex, store, view) {
                        var s = Ext.getStore('Ingredients');
                        var i = s.getAt(s.find('id', value)); 
                        return i.get('name');
                    },
                    dataIndex: 'ingredient_id',
                    text: 'Name',
                    flex: 1
                },
                {
                    xtype: 'numbercolumn',
                    dataIndex: 'qty',
                    text: 'Qty',
                    flex: 1
                },
                {
                    xtype: 'gridcolumn',
                    renderer: function(value, metaData, record, rowIndex, colIndex, store, view) {
                        var s = Ext.getStore('Units');
                        var u = s.getAt(s.find('id',value));
                        return u.get('abbr');
                    },
                    dataIndex: 'unit_id',
                    text: 'Unit',
                    flex: 1
                },
                {
                    xtype: 'actioncolumn',
                    items: [
                        {
                            handler: function(view, rowIndex, colIndex, item, e, record, row) {
                                view.getStore().removeAt(rowIndex);
                            },
                            icon: 'resources/delete.gif',
                            tooltip: 'Delete Ingredient'
                        }
                    ]
                }
            ]
        });

        me.callParent(arguments);
    }

});