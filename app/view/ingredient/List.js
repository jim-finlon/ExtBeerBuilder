/*
 * File: app/view/ingredient/List.js
 *
 * This file was generated by Sencha Architect version 2.2.2.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 4.2.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 4.2.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('BeerBuilder.view.ingredient.List', {
    extend: 'Ext.panel.Panel',
    alias: 'widget.ingredientlist',

    requires: [
        'BeerBuilder.view.Header'
    ],

    border: false,
    layout: {
        type: 'card'
    },

    initComponent: function() {
        var me = this;

        Ext.applyIf(me, {
            dockedItems: [
                {
                    xtype: 'header',
                    html: 'Ingredients',
                    itemId: 'header',
                    dock: 'top'
                }
            ],
            items: [
                {
                    xtype: 'dataview',
                    cls: 'recipeingredient-list',
                    itemId: 'dataview',
                    tpl: Ext.create('Ext.XTemplate', 
                        '<tpl for=".">',
                        '    <div class="recipeingredient">',
                        '        <div>{qty} {[this.getUnitAbbr(values.unit_id)]} {[this.getIngredientName(values.ingredient_id)]}</div>',
                        '    </div>',
                        '</tpl>',
                        {
                            getIngredientName: function(v) {
                                var s = Ext.getStore('Ingredients');
                                var i = s.getAt(s.find('id', v)); 
                                return i.get('name');
                            },
                            getUnitName: function(v) {
                                var s = Ext.getStore('Units');
                                var u = s.getAt(s.find('id',v));
                                return u.get('name');
                            },
                            getUnitAbbr: function(v) {
                                var s = Ext.getStore('Units');
                                var u = s.getAt(s.find('id',v));
                                return u.get('abbr');
                            }
                        }
                    ),
                    autoScroll: true,
                    itemSelector: '.recipeingredient'
                }
            ]
        });

        me.callParent(arguments);
    },

    bind: function(record,store) {
        is = Ext.getStore('RecipeIngredients');
        is.filter(function (r){
            var rid = r.get('recipe_id');
            return record.raw.id == rid;
        });
        this.child('#dataview').bindStore(is);
    }

});