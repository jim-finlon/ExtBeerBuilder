/*
 * File: app/view/RecipesGridPanel.js
 *
 * This file was generated by Sencha Architect version 2.2.2.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 4.2.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 4.2.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('BeerBuilder.view.RecipesGridPanel', {
    extend: 'Ext.grid.Panel',
    alias: 'widget.recipesgridpanel',

    id: 'recipesgridpanel',
    itemId: 'recipesgridpanel',
    title: 'My Grid Panel',
    store: 'Recipes',

    initComponent: function() {
        var me = this;

        Ext.applyIf(me, {
            dockedItems: [
                {
                    xtype: 'toolbar',
                    dock: 'top',
                    items: [
                        {
                            xtype: 'button',
                            action: 'addRecipe',
                            text: 'New Recipe'
                        },
                        {
                            xtype: 'button',
                            handler: function(button, event) {
                                var formpanel = Ext.getCmp('recipeformpanel');
                                var form = formpanel.getForm();
                                var record = form.getRecord();
                                //remove recipe ingredients from store

                                var ris = Ext.getStore('RecipeIngredients');
                                var records = [];
                                ris.each(function(record) {
                                    records.push(record);
                                });
                                ris.remove(records);


                                var rs = Ext.getStore('Recipes');
                                rs.remove(record);
                                formpanel.clearForm();
                            },
                            text: 'Delete Recipe'
                        }
                    ]
                }
            ],
            columns: [
                {
                    xtype: 'gridcolumn',
                    dataIndex: 'name',
                    text: 'Name',
                    flex: 1
                },
                {
                    xtype: 'gridcolumn',
                    dataIndex: 'type',
                    text: 'Type',
                    flex: 1
                },
                {
                    xtype: 'gridcolumn',
                    dataIndex: 'style',
                    text: 'Style',
                    flex: 1
                }
            ]
        });

        me.callParent(arguments);
    }

});